<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Grababite Chat App</title>
  <script src="/socket.io/socket.io.js"></script
  <link rel="stylesheet" href="https://code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.css" />
  <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
  <style>
    body {
      padding: 0;
      margin: 0;
      display: flex;
      justify-content: center;
      font-family: Copperplate;

    }
    #message-container {
      width: 80%;
      width: 600px;
    }

    #message-container div {
      background-color: #FFF;
      padding: 5px;
    }

    #message-container div:nth-child(2n) {
      background-color: #FFF;
      width: 600px;
    }

    #send-container {
      position: fixed;
      padding-bottom: 30px;
      bottom: 0;
      background-color: white;
      width: 600px;
      width: 80%;

    }

    #message-input {
      flex-grow: 1;
      width: 580px;
    }
    #chatWrap {
    width: 600px;
    border: 1px solid #ddd;
    }
    #chatHeader {
        height: 60px;
        text-align: center;
        line-height: 60px;
        font-size: 25px;
        font-weight: 900;
        border-bottom: 1px solid #ddd;
        color: #9400D3;
    }
    #chatLog {
        height: 700px;
        overflow-y: auto;
        padding: 10px;
    }
    nav {
    width: 600px;
    min-width: 600px;
    height: 50px;
    background: #9400D3;
    color: black;
    padding: 0px 20px;
    box-sizing: border-box;
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: 17px;
  }
    #logoutBtn{
    color: black !important;
    text-transform: uppercase;
    text-decoration: none;
    background-color: white;
    padding: 10px;
    border-radius: 5px;
    display: inline-block;
    border: none;
    transition: all 0.4s ease 0s;
    }
    #send-button{
    color: black !important;
    text-transform: uppercase;
    text-decoration: none;
    background-color: #9400D3;
    padding: 10px;
    border-radius: 5px;
    display: inline-block;
    border: none;
    transition: all 0.4s ease 0s;
    }

  </style>
</head>
<body>
<div id="contentWrap">
    <nav>
      <span id="nav-header">
        Chat app
      </span>
      <button id="logoutBtn" onclick = "location.href='/user/<%=user.data.login%>'">BACK</button>
    </nav>
  <div id="chatWrap">
    <div id ="chatHeader">Chat</div>
      <div id ="chatLog">
        <div id="message-container"></div>
          <form id="send-container">
            <input type="text" id="message-input">
              <button type="submit" id="send-button">Send</button>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>
  <script>
  const socket = io()
  const messageContainer = document.getElementById('message-container')
  const messageForm = document.getElementById('send-container')
  const messageInput = document.getElementById('message-input')
  const destinationUser = location.pathname.split('/')[2];

  const name = `<%=user.data.login%>`
  appendMessage('You joined')
  socket.emit('new-user', name, destinationUser)

  socket.on('chat-message', data => {
    appendMessage(`${data.name}: ${data.message}`)
  })

  socket.on('user-connected', name => {
    appendMessage(`${name} connected`)
  })

  socket.on('user-not-connected', name => {
    appendMessage(`${name} has been requested to join the chat`);
  })

  socket.on('user-not-online', name => {
    appendMessage(`${name} is not online now`);
  })

  socket.on('user-disconnected', name => {
    appendMessage(`${name} disconnected`)
  })

  messageForm.addEventListener('submit', e => {
    e.preventDefault()
    const message = messageInput.value
    appendMessage(`You: ${message}`)
    socket.emit('send-chat-message', message, destinationUser)
    messageInput.value = ''
  })

  function appendMessage(message) {
    const messageElement = document.createElement('div')
    messageElement.innerText = message
    messageContainer.append(messageElement)
  }
  </script>
</html>
