<div class="event-feed">
    
    <script>
        //get socket from papa nav

        //Updates the numberinos on the page, fragile to change
        socket.on('updateevent', (updateType, eventID, userData) => { //We need eventid, user details
            switch(updateType) {    //apologies for my hackiness
                case 'JOIN':
                    //Button Changes
                    let joinButton = document.getElementById(`${eventID}-join`);
                    if(joinButton && userData.login=="<%= user.data.login %>"){    //If there is no button they are the owner or a restaurant
                        joinButton.innerText = 'Not interested';                     //Change the button text
                        joinButton.setAttribute('onclick', `unjoinEvent(${eventID})`)//Change the action 
                        joinButton.id = `${eventID}-unjoin`                         //Change the id
                        joinButton.removeAttribute('disabled');
                    }
                    //Attendance Count Changes
                    let attendanceCount = document.getElementById(`${eventID}-attendance-count`);
                    let attendanceList;                                             //Init here so either statements can change it
                    if(attendanceCount==null) {  //Then there is no list
                        let attendanceDetails = document.createElement('details');
                        attendanceDetails.id = `${eventID}-attendance-details`;
                        let attSum = document.createElement('summary');
                        attSum.innerHTML = `With <span id=${eventID}-attendance-count>1</span>`;
                        attendanceDetails.appendChild(attSum);
                        attendanceList = document.createElement('ul');
                        attendanceList.id = `${eventID}-attendance-list`;
                        attendanceList.classList.add("attendance-list");
                        attendanceDetails.appendChild(attendanceList);
                        document.getElementById(eventID).appendChild(attendanceDetails);//Add details to the div
                    } else {
                        let newCount = parseInt(attendanceCount.innerText) + 1;
                        attendanceCount.innerText = newCount;
                        //Attendance List Changes, we are just filling login for now
                        attendanceList = document.getElementById(`${eventID}-attendance-list`);
                    }
                    let newAttender = document.createElement('li');
                        newAttender.innerHTML = `<a href="/user/${userData.login}">@${userData.login}</a>`;
                    attendanceList.appendChild(newAttender);
                    break;
                case 'UNJOIN':
                    //Button Changes
                    let unjoinButton = document.getElementById(`${eventID}-unjoin`);                //Must be there
                    if(unjoinButton && userData.login=="<%= user.data.login %>"){
                        unjoinButton.innerText = 'Join Event';                                          //Change the button text
                        unjoinButton.setAttribute('onclick', `joinEvent(${eventID})`);               //Change the action 
                        unjoinButton.id = `${eventID}-join`;                                            //Change the id D:
                        unjoinButton.removeAttribute('disabled');
                    }
                    //Attendance Count Changes
                    let ujattendanceCount = document.getElementById(`${eventID}-attendance-count`);   //must be there for this request to be made
                    let newCount = !ujattendanceCount? -1 : parseInt(ujattendanceCount.innerText) - 1;
                    if(newCount <= 0){
                        /*document.getElementById(`${eventID}-attendance-list`)
                            .innerHTML = "<ul></ul>";
                        document.getElementById(`${eventID}-attendance-details`)
                            .removeChild(document.getElementById(`${eventID}-attendance-list`))*/
                        if(document.getElementById(`${eventID}-attendance-details`)){
                            document.getElementById(eventID)
                            .removeChild(document.getElementById(`${eventID}-attendance-details`));
                        }
                        
                    } else {
                        ujattendanceCount.innerText = newCount;
                        //Attendance List Changes, we are just filling login for now
                        let ujattendanceList = document.getElementById(`${eventID}-attendance-list`);
                        //thanks to: https://stackoverflow.com/a/24775765
                        NodeList.prototype.forEach = Array.prototype.forEach
                        let children = ujattendanceList.childNodes;
                        let toRemove;
                        children.forEach(function(child){
                            if(child.innerHTML==`<a href="/user/${userData.login}">@${userData.login}</a>`){
                                toRemove = child;
                            }
                        });
                        if(toRemove){
                            ujattendanceList.removeChild(toRemove);
                        }
                    }
                    break;
                case 'DELETE':
                    console.log(`event ${eventID} deleted`)
                    let eventToDelete = document.getElementById(eventID);
                    if(eventToDelete)
                        eventToDelete.parentNode.removeChild(eventToDelete);
                    break;
            }  
        });
    </script>
    <script>
        //Button actions -> fetch API
        function joinEvent(evid) {
            document.getElementById(`${evid}-join`).setAttribute('disabled', 'true');  //Disable button
            let data = {evid: evid, login: "<%= user.data.login %>"};
            fetch('/event/join', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data)
            })
                .then(res => res.json())
                    .then( (data) => {
                        if(data.error){
                            console.log('Join event failed D:');
                        }
                    })
                    .catch(err => console.error(err));
        }
        function unjoinEvent(evid) {
            let data = {evid: evid, login: "<%= user.data.login %>"};
            fetch('/event/unjoin', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data)
            })
                .then(res => res.json())
                .then( (data) => {
                    if(data.error){
                        console.log('Unjoin event failed D:');
                    }
                })
                .catch(err => console.error(err));
        }
        function deleteEvent(evid) {
            let attendance = parseInt(document.getElementById(`${evid}-attendance-count`));
            let checkOk = confirm(`Are you sure you want to cancel this event?${
                attendance?` There are ${attendance} people counting on you`: ''
            }`);
            if(checkOk){
                let data = {evid: evid, login: "<%= user.data.login %>"};
                fetch('/event/delete', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                })
                    .then(res => res.json())
                    .then( (data) => {
                        if(data.error){
                            console.log('Delete event failed D:');
                        }
                    })
                    .catch(err => console.error(err));
            }
        }
        function refreshPage(event) {
            //window.location.hash = `#${event}`;
            window.location.href = `/feed#${event}`;
            window.location.reload();
        }
    </script>

    <% if(events && events.length > 0) { %>

        <% if (user.type === 'USER') { %>
            <div class="container">
                <div class="row justify-content-md-center">
                <h2 class="col-4">Your upcoming events</h2>
                <button class="btn btn-primary col-2" id="colBtn" type="button" data-toggle="collapse" data-target="#userEvents" aria-expanded="false" aria-controls="userEvents">
                    <span id="colBtnShow">Show</span>
                    <span id="colBtnHide">Hide</span>
                </button>
                </div>
            </div>
            <div class="collapse show" id="userEvents">
                <% for (let event of events) { %>
                    <% if (event.login===user.data.login || event.attendees.includes(user.data.login)) { %>
                        <%- include ('./feeditem.ejs', {event, user}) %>
                    <% } %>
                <% } %> 
            </div>
            <hr>
        <% } %>
        <h2>Events that might interest you</h2>
        <% for (let event of events) { %>
            <% if (user.type==='USER' && event.login!==user.data.login && !event.attendees.includes(user.data.login)) { %>
                <%- include ('./feeditem.ejs', {event, user}) %>
            <% } else if (user.type === 'REST') { %>
                <%- include ('./feeditem.ejs', {event, user}) %>
            <% } %>
        <% } %>

    <% } else { %>
        <h1>
            <% if (user.type === 'USER') { %>
                There are no upcoming events, why not start one?
            <% } else { %>
                There are no upcoming events at your restaurant
            <% } %>
        </h1>
    <% } %>
</div>
